package tests;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import entities.Financing;

public class FinancingTests {

	@Test
	public void constructorShouldCreateObjectWhenValidData() {

		Financing f = new Financing(100000.00, 2000.00, 80);

		Assertions.assertEquals(100000.0, f.getTotalAmount());
		Assertions.assertEquals(2000.0, f.getIncome());
		Assertions.assertEquals(80, f.getMonths());

	}

	@Test
	public void constructorShouldThrowIllegalArgumentWhenInvalidData() {
		Assertions.assertThrows(IllegalArgumentException.class, () -> {
			Financing f = new Financing(1000000.00, 2000.00, 80);

		});

	}

	@Test
	public void setTotalAmountShouldSetDataWhenValidData() {
		// arrenge
		Financing f = new Financing(100000.00, 2000.00, 80);
		// action
		f.setTotalAmount(90000.0);

		// assert
		Assertions.assertEquals(90000.0, f.getTotalAmount());

	}

	@Test
	public void setTotalAmountShouldThrowIllegalArgumentWhenInvalidData() {

		Assertions.assertThrows(IllegalArgumentException.class, () -> {
			// arrenge
			Financing f = new Financing(100000.00, 2000.00, 80);
			// action
			f.setTotalAmount(110000.0);

		});

	}

	@Test
	public void setIncomeShouldSetDataWhenValidData() {
		// arrenge
		Financing f = new Financing(100000.00, 2000.00, 80);
		// action
		f.setIncome(2100.0);

		// assert
		Assertions.assertEquals(2100.0, f.getIncome());

	}

	@Test
	public void setIncomeShouldThrowIllegalArgumentWhenInvalidData() {

		Assertions.assertThrows(IllegalArgumentException.class, () -> {
			// arrenge
			Financing f = new Financing(100000.00, 2000.00, 80);
			// action
			f.setIncome(1900.0);

		});
		
	}

		@Test
		public void setMonthsShouldSetDataWhenValidData() {
			// arrenge
			Financing f = new Financing(100000.00, 2000.00, 80);
			// action
			f.setMonths(90);

			// assert
			Assertions.assertEquals(90, f.getMonths());

		}

		@Test
		public void setMonthsShouldThrowIllegalArgumentWhenInvalidData() {

			Assertions.assertThrows(IllegalArgumentException.class, () -> {
				// arrenge
				Financing f = new Financing(100000.00, 2000.00, 80);
				// action
				f.setMonths(null);

			});

		
	}

}
